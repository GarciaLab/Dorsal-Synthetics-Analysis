%Solve the master equation for the production and degradation of mRNA
%molecules

%Model parameters:
c=1;    % transition rate 1/min

%Simulation paramaters
numCells = 100;   % the total number of nuclei in the simulation
dt = 0.01;        %Smaller than all time scales in the system
TotalTime = 15;   %Larger than 1/gamma, which is the time to steady state
NumStates = 6;    %number of states

%Create the matrix to store the results
M(1:TotalTime/dt,1:NumStates+1) = 0; %initialize to zero everywhenre

%Initial conditions:
M(1,1)=numCells;    %everyone is at state 1 initially

%Do the calculation
for i=2:TotalTime/dt % loop over time steps
    
    %Calculate the evolution of all boxes minus the ones at the edges
    for j=2:NumStates % loop over states
        M(i,j) = M(i-1,j) - c*dt*M(i-1,j) - r*dt*M(i-1,j)-...
            gamma*dt*(j-1)*M(i-1,j)+gamma*dt*j*M(i-1,j+1);        
    end
    
    %Calculate the first bin
    M(i,1)=M(i-1,1)-r*dt*M(i-1,1)+gamma*dt*M(i-1,2);
    %Calculate the last bin
    M(i,MaxM+1)=M(i-1,MaxM+1)+r*dt*M(i-1,MaxM)-gamma*dt*MaxM*M(i-1,MaxM+1);
end
    
   
%Make a movie
MVector=0:MaxM;     %This is the vector of bins for the histogram
figure(1)
for i=1:TotalTime/dt
   bar(MVector,M(i,:))
   ylim([0,0.3])
   drawnow          %Force Matlab to draw the plot 
end


%Compare the last frame of our distribution to the Poisson distribution
figure(2)
bar(MVector,M(TotalTime/dt,:))
hold on
plot(MVector,1./factorial(MVector).*(r/gamma).^MVector*exp(-r/gamma),'-r')
hold off
%We had to use the dots to match dimensions


















